{"ast":null,"code":"import _toConsumableArray from\"C:/Users/janse/OneDrive/\\xC1rea de Trabalho/REACT/SECRET_WORD/secretword/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"C:/Users/janse/OneDrive/\\xC1rea de Trabalho/REACT/SECRET_WORD/secretword/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useCallback,useEffect,useState}from\"react\";// components\nimport StartScreen from\"./components/StartScreen\";import Game from\"./components/Game\";import GameOver from\"./components/GameOver\";// styles\nimport\"./App.css\";// data\nimport{wordsList}from\"./data/words\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var stages=[{id:0,name:\"start\"},{id:1,name:\"game\"},{id:2,name:\"end\"}];function App(){var _useState=useState(stages[0].name),_useState2=_slicedToArray(_useState,2),gameStage=_useState2[0],setGameStage=_useState2[1];var _useState3=useState(wordsList),_useState4=_slicedToArray(_useState3,1),words=_useState4[0];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),pickedWord=_useState6[0],setPickedWord=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),pickedCategory=_useState8[0],setPickedCategory=_useState8[1];var _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),letters=_useState10[0],setLetters=_useState10[1];var _useState11=useState([]),_useState12=_slicedToArray(_useState11,2),guessedLetters=_useState12[0],setGuessedLetters=_useState12[1];var _useState13=useState([]),_useState14=_slicedToArray(_useState13,2),wrongLetters=_useState14[0],setWrongLetters=_useState14[1];var _useState15=useState(3),_useState16=_slicedToArray(_useState15,2),guessed=_useState16[0],setGuessed=_useState16[1];var _useState17=useState(0),_useState18=_slicedToArray(_useState17,2),score=_useState18[0],setScore=_useState18[1];var pickWordAndCategory=useCallback(function(){// pick a random category\nvar categories=Object.keys(words);var category=categories[Math.floor(Math.random()*Object.keys(categories).length)];// pick a random word\nvar word=words[category][Math.floor(Math.random()*words[category].length)];console.log(category,word);return{category:category,word:word};},[words]);// start the game\nvar startGame=useCallback(function(){// clear all letters\nclearLettersStates();// choose a word\nvar _pickWordAndCategory=pickWordAndCategory(),category=_pickWordAndCategory.category,word=_pickWordAndCategory.word;console.log(category,word);var wordLetters=word.split(\"\");wordLetters=wordLetters.map(function(l){return l.toLowerCase();});// console.log(category, word);\nsetPickedCategory(category);setPickedWord(word);setLetters(wordLetters);setGameStage(stages[1].name);},[pickWordAndCategory]);// process letter input\nvar verifyLetter=function verifyLetter(letter){var normalizedLetter=letter.toLowerCase();// check if letter has already been utilized\nif(guessedLetters.includes(normalizedLetter)||wrongLetters.includes(normalizedLetter)){return;}// push guessed letter or remove a chance\nif(letters.includes(normalizedLetter)){setGuessedLetters(function(actualGuessedLetters){return[].concat(_toConsumableArray(actualGuessedLetters),[letter]);});}else{setWrongLetters(function(actualWrongLetters){return[].concat(_toConsumableArray(actualWrongLetters),[normalizedLetter]);});setGuessed(function(actualGuessed){return actualGuessed-1;});}};console.log(wrongLetters);// restart the game\nvar retry=function retry(){setScore(0);setGuessed(3);setGameStage(stages[0].name);};// clear letters state\nvar clearLettersStates=function clearLettersStates(){setGuessedLetters([]);setWrongLetters([]);};// check if guesses ended\nuseEffect(function(){if(guessed===0){// game over and reset all states\nclearLettersStates();setGameStage(stages[2].name);}},[guessed]);// check win condition\nuseEffect(function(){var uniqueLetters=_toConsumableArray(new Set(letters));// win condition\nif(guessedLetters.length===uniqueLetters.length&&gameStage===stages[1].name){// add score\nsetScore(function(actualScore){return actualScore+=100;});setGuessed([3]);// restart game with new word - acertando a palavra\nsetTimeout(function(){startGame();},1000);}},[guessedLetters,letters,startGame]);return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[gameStage===\"start\"&&/*#__PURE__*/_jsx(StartScreen,{startGame:startGame}),gameStage===\"game\"&&/*#__PURE__*/_jsx(Game,{verifyLetter:verifyLetter,pickedWord:pickedWord,pickedCategory:pickedCategory,letters:letters,guessedLetters:guessedLetters,wrongLetters:wrongLetters,guessed:guessed,score:score}),gameStage===\"end\"&&/*#__PURE__*/_jsx(GameOver,{retry:retry,score:score})]});}export default App;","map":{"version":3,"names":["useCallback","useEffect","useState","StartScreen","Game","GameOver","wordsList","jsx","_jsx","jsxs","_jsxs","stages","id","name","App","_useState","_useState2","_slicedToArray","gameStage","setGameStage","_useState3","_useState4","words","_useState5","_useState6","pickedWord","setPickedWord","_useState7","_useState8","pickedCategory","setPickedCategory","_useState9","_useState10","letters","setLetters","_useState11","_useState12","guessedLetters","setGuessedLetters","_useState13","_useState14","wrongLetters","setWrongLetters","_useState15","_useState16","guessed","setGuessed","_useState17","_useState18","score","setScore","pickWordAndCategory","categories","Object","keys","category","Math","floor","random","length","word","console","log","startGame","clearLettersStates","_pickWordAndCategory","wordLetters","split","map","l","toLowerCase","verifyLetter","letter","normalizedLetter","includes","actualGuessedLetters","concat","_toConsumableArray","actualWrongLetters","actualGuessed","retry","uniqueLetters","Set","actualScore","setTimeout","className","children"],"sources":["C:/Users/janse/OneDrive/Área de Trabalho/REACT/SECRET_WORD/secretword/src/App.js"],"sourcesContent":["import { useCallback, useEffect, useState } from \"react\";\n\n// components\nimport StartScreen from \"./components/StartScreen\";\nimport Game from \"./components/Game\";\nimport GameOver from \"./components/GameOver\";\n\n// styles\nimport \"./App.css\";\n\n// data\nimport { wordsList } from \"./data/words\";\n\nconst stages = [\n  { id: 0, name: \"start\" },\n  { id: 1, name: \"game\" },\n  { id: 2, name: \"end\" },\n];\n\nfunction App() {\n  const [gameStage, setGameStage] = useState(stages[0].name);\n  const [words] = useState(wordsList);\n\n  const [pickedWord, setPickedWord] = useState(\"\");\n  const [pickedCategory, setPickedCategory] = useState(\"\");\n  const [letters, setLetters] = useState([]);\n  \n  const [guessedLetters, setGuessedLetters] = useState([]);\n  const [wrongLetters, setWrongLetters] = useState([]);\n  const [guessed, setGuessed] = useState(3);\n  const [score, setScore] = useState(0);\n\n\n  const pickWordAndCategory = useCallback(() => {\n    // pick a random category\n    const categories = Object.keys(words);\n    const category =\n      categories[Math.floor(Math.random() * Object.keys(categories).length)];\n\n    // pick a random word\n    const word =\n      words[category][Math.floor(Math.random() * words[category].length)];\n\n    console.log(category, word);\n\n    return { category, word };\n  }, [words]);\n\n  // start the game\n  const startGame = useCallback(() => {\n    // clear all letters\n    clearLettersStates();\n\n    // choose a word\n    const { category, word } = pickWordAndCategory();\n\n    console.log(category, word);\n\n    let wordLetters = word.split(\"\");\n\n    wordLetters = wordLetters.map((l) => l.toLowerCase());\n\n    // console.log(category, word);\n\n    setPickedCategory(category);\n    setPickedWord(word);\n    setLetters(wordLetters);\n\n    setGameStage(stages[1].name);\n  }, [pickWordAndCategory]);\n\n  // process letter input\n  const verifyLetter = (letter) => {\n    const normalizedLetter = letter.toLowerCase();\n\n    // check if letter has already been utilized\n    if (\n      guessedLetters.includes(normalizedLetter) ||\n      wrongLetters.includes(normalizedLetter)\n    ) {\n      return;\n    }\n\n    // push guessed letter or remove a chance\n    if (letters.includes(normalizedLetter)) {\n      setGuessedLetters((actualGuessedLetters) => [\n        ...actualGuessedLetters,\n        letter,\n      ]);\n    } else {\n      setWrongLetters((actualWrongLetters) => [\n        ...actualWrongLetters,\n        normalizedLetter,\n      ]);\n\n      setGuessed((actualGuessed) => actualGuessed - 1);\n    }\n  };\n\n  console.log(wrongLetters);\n\n  // restart the game\n  const retry = () => {\n    setScore(0);\n    setGuessed(3);\n    setGameStage(stages[0].name);\n  };\n\n  // clear letters state\n  const clearLettersStates = () => {\n    setGuessedLetters([]);\n    setWrongLetters([]);\n  };\n\n  // check if guesses ended\n  useEffect(() => {\n    if (guessed === 0) {\n      // game over and reset all states\n      clearLettersStates();\n\n      setGameStage(stages[2].name);\n    }\n  }, [guessed]);\n\n  // check win condition\n  useEffect(() => {\n    const uniqueLetters = [...new Set(letters)];\n\n    // win condition\n    if (guessedLetters.length === uniqueLetters.length && gameStage === stages[1].name) {\n\n      // add score\n      setScore((actualScore) => (actualScore += 100));\n      setGuessed([3])\n   \n      // restart game with new word - acertando a palavra\n             setTimeout(function () {\n              startGame();\n            }, 1000);\n    }\n  }, [guessedLetters, letters, startGame]);\n\n\n\n  return (\n    <div className=\"App\">\n      {gameStage === \"start\" && <StartScreen startGame={startGame} />}\n      {gameStage === \"game\" && (\n        <Game\n          verifyLetter={verifyLetter}\n          pickedWord={pickedWord}\n          pickedCategory={pickedCategory}\n          letters={letters}\n          guessedLetters={guessedLetters}\n          wrongLetters={wrongLetters}\n          guessed={guessed}\n          score={score}\n        />\n      )}\n      {gameStage === \"end\" && <GameOver retry={retry} score={score} />}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}