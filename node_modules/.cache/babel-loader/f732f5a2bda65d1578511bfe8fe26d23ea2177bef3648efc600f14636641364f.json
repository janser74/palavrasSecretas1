{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\janse\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\REACT\\\\SECRET_WORD\\\\secretword\\\\src\\\\components\\\\Game.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport \"./Game.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Game = ({\n  verifyLetter,\n  pickedWord,\n  pickedCategory,\n  letters,\n  guessedLetters,\n  wrongLetters,\n  guesses,\n  score\n}) => {\n  _s();\n  const [letter, setLetter] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"points\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Pontua\\xE7\\xE3o: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Adivinhe a palavra:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"tip\",\n      children: [\"Dica sobre a palavra: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: pickedCategory\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Voc\\xEA ainda tem \", guesses, \" tentativas\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wordContainer\",\n      children: letters.map((letters, i) => guessedLetters.includes(letters) ? /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"letter\",\n        children: letters\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"blanckSquare\"\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 10\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"letterContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Tente adivinha uma letra da palavra:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"letter\",\n          maxLength: \"1\",\n          required: true,\n          required: true,\n          onChange: e => setLetter(e.target.value),\n          value: letter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Jogar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrongLettersContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Letras j\\xE1 utilizadas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), wrongLetters.map((letters, i) => /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [letters, \"- \"]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(Game, \"Ec3xa/mzG26E/6SQA6dx/R/IsM8=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Game","verifyLetter","pickedWord","pickedCategory","letters","guessedLetters","wrongLetters","guesses","score","_s","letter","setLetter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","i","includes","onSubmit","handleSubmit","type","name","maxLength","required","onChange","e","target","value","_c","$RefreshReg$"],"sources":["C:/Users/janse/OneDrive/Área de Trabalho/REACT/SECRET_WORD/secretword/src/components/Game.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport \"./Game.css\";\r\n\r\nconst Game = ({\r\n  verifyLetter, \r\n  pickedWord,\r\n  pickedCategory,\r\n  letters,\r\n  guessedLetters,\r\n  wrongLetters,\r\n  guesses,\r\n  score,\r\n\r\n}) => {\r\n\r\n  const [letter, setLetter] = useState (\"\")\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"game\">\r\n      \r\n      <p className=\"points\">\r\n        <span>Pontuação: {score}</span>\r\n      </p>\r\n      <h1>Adivinhe a palavra:</h1>\r\n     <h3 className=\"tip\">\r\n      Dica sobre a palavra: <span>{pickedCategory}</span>\r\n     </h3>\r\n     <p>Você ainda tem {guesses} tentativas</p>\r\n           <div className=\"wordContainer\">\r\n        {letters.map((letters, i) => (\r\n\r\n          guessedLetters.includes(letters) ? (\r\n            <span key={i} className=\"letter\">{letters}</span>\r\n          ) : (\r\n            \r\n         <span key={i} className=\"blanckSquare\"></span>\r\n\r\n          )\r\n\r\n\r\n\r\n\r\n        ))}\r\n      </div>\r\n      <div className=\"letterContainer\">\r\n        <p>Tente adivinha uma letra da palavra:</p>\r\n        <form onSubmit={handleSubmit}>\r\n            <input type=\"text\" name=\"letter\" maxLength=\"1\" required required onChange={(e) => setLetter(e.target.value)} value={letter}/>\r\n            <button>Jogar</button>\r\n        </form>\r\n        <div className=\"wrongLettersContainer\">\r\n          <p>Letras já utilizadas</p>\r\n          {wrongLetters.map((letters, i) => (\r\n            <span key={i}>{letters}- </span>\r\n          ))}\r\n          </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Game"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}